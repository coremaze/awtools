use aw_core::AWPacket;

use crate::{AwEvent, AwInstance, PkwareDcl};

pub fn handle_attributes(instance: &mut AwInstance, packet: &AWPacket, events: &mut Vec<AwEvent>) {
    // World attribute packets have variables with IDs that do not follow the typical system.

    let object_password: Option<String> = {
        let mut decryptor = PkwareDcl::new();
        if let Some(data) = packet.get_data(74u16) {
            let decrypted = decryptor.decrypt(&data);
            match String::from_utf8(decrypted) {
                Ok(s) => Some(s),
                Err(_) => None,
            }
        } else {
            None
        }
    };

    let cav_object_password: Option<String> = {
        let mut decryptor = PkwareDcl::new();
        if let Some(data) = packet.get_data(153u16) {
            let decrypted = decryptor.decrypt(&data);
            match String::from_utf8(decrypted) {
                Ok(s) => Some(s),
                Err(_) => None,
            }
        } else {
            None
        }
    };

    let attributes = WorldAttributes {
        allow_3_axis_rotation: packet.get_string(0u16),
        allow_avatar_collision: packet.get_string(1u16),
        allow_citizen_whisper: packet.get_string(2u16),
        allow_flying: packet.get_string(3u16),
        allow_object_select: packet.get_string(4u16),
        allow_passthru: packet.get_string(5u16),
        allow_teleport: packet.get_string(6u16),
        allow_tourist_build: packet.get_string(7u16),
        allow_tourist_whisper: packet.get_string(8u16),
        always_show_names: packet.get_string(9u16),
        ambient_light_blue: packet.get_string(10u16),
        ambient_light_green: packet.get_string(11u16),
        ambient_light_red: packet.get_string(12u16),
        avatar_refresh_rate: packet.get_string(13u16),
        backdrop: packet.get_string(14u16),
        bots_right: packet.get_string(15u16),
        build_number: packet.get_string(16u16),
        build_right: packet.get_string(17u16),
        buoyancy: packet.get_string(18u16),
        cell_limit: packet.get_string(19u16),
        clouds_layer1_mask: packet.get_string(20u16),
        clouds_layer1_opacity: packet.get_string(21u16),
        clouds_layer1_speed_x: packet.get_string(22u16),
        clouds_layer1_speed_z: packet.get_string(23u16),
        clouds_layer1_texture: packet.get_string(24u16),
        clouds_layer1_tile: packet.get_string(25u16),
        clouds_layer2_mask: packet.get_string(26u16),
        clouds_layer2_opacity: packet.get_string(27u16),
        clouds_layer2_speed_x: packet.get_string(28u16),
        clouds_layer2_speed_z: packet.get_string(29u16),
        clouds_layer2_texture: packet.get_string(30u16),
        clouds_layer2_tile: packet.get_string(31u16),
        clouds_layer3_mask: packet.get_string(32u16),
        clouds_layer3_opacity: packet.get_string(33u16),
        clouds_layer3_speed_x: packet.get_string(34u16),
        clouds_layer3_speed_z: packet.get_string(35u16),
        clouds_layer3_texture: packet.get_string(36u16),
        clouds_layer3_tile: packet.get_string(37u16),
        creation_timestamp: packet.get_string(38u16),
        disable_avatar_list: packet.get_string(39u16),
        disable_chat: packet.get_string(40u16),
        disable_create_url: packet.get_string(41u16),
        eject_right: packet.get_string(42u16),
        eminent_domain_right: packet.get_string(43u16),
        enable_referer: packet.get_string(44u16),
        enable_terrain: packet.get_string(45u16),
        enter_right: packet.get_string(46u16),
        entry_point: packet.get_string(47u16),
        expiration: packet.get_string(48u16),
        fog_blue: packet.get_string(49u16),
        fog_enable: packet.get_string(50u16),
        fog_green: packet.get_string(51u16),
        fog_maximum: packet.get_string(52u16),
        fog_minimum: packet.get_string(53u16),
        fog_red: packet.get_string(54u16),
        gravity: packet.get_string(55u16),
        ground: packet.get_string(56u16),
        home_page: packet.get_string(57u16),
        keywords: packet.get_string(58u16),
        light_blue: packet.get_string(59u16),
        light_draw_bright: packet.get_string(60u16),
        light_draw_front: packet.get_string(61u16),
        light_draw_size: packet.get_string(62u16),
        light_green: packet.get_string(63u16),
        light_mask: packet.get_string(64u16),
        light_red: packet.get_string(65u16),
        light_texture: packet.get_string(66u16),
        light_x: packet.get_string(67u16),
        light_y: packet.get_string(68u16),
        light_z: packet.get_string(69u16),
        max_light_radius: packet.get_string(70u16),
        max_users: packet.get_string(71u16),
        minimum_visibility: packet.get_string(72u16),
        object_count: packet.get_string(73u16),
        object_password: object_password,
        object_path: packet.get_string(76u16),
        object_refresh: packet.get_string(77u16),
        public_speaker_right: packet.get_string(78u16),
        rating: packet.get_string(79u16),
        repeating_ground: packet.get_string(80u16),
        restricted_radius: packet.get_string(81u16),
        size: packet.get_string(82u16),
        skybox: packet.get_string(83u16),
        sky_bottom_blue: packet.get_string(84u16),
        sky_bottom_green: packet.get_string(85u16),
        sky_bottom_red: packet.get_string(86u16),
        sky_east_blue: packet.get_string(87u16),
        sky_east_green: packet.get_string(88u16),
        sky_east_red: packet.get_string(89u16),
        sky_north_blue: packet.get_string(90u16),
        sky_north_green: packet.get_string(91u16),
        sky_north_red: packet.get_string(92u16),
        sky_south_blue: packet.get_string(93u16),
        sky_south_green: packet.get_string(94u16),
        sky_south_red: packet.get_string(95u16),
        sky_top_blue: packet.get_string(96u16),
        sky_top_green: packet.get_string(97u16),
        sky_top_red: packet.get_string(98u16),
        sky_west_blue: packet.get_string(99u16),
        sky_west_green: packet.get_string(100u16),
        sky_west_red: packet.get_string(101u16),
        sound_footstep: packet.get_string(102u16),
        sound_water_enter: packet.get_string(103u16),
        sound_water_exit: packet.get_string(104u16),
        speak_right: packet.get_string(105u16),
        special_commands_right: packet.get_string(106u16),
        special_objects_right: packet.get_string(107u16),
        terrain_ambient: packet.get_string(108u16),
        terrain_diffuse: packet.get_string(109u16),
        terrain_offset: packet.get_string(110u16),
        terrain_timestamp: packet.get_string(111u16),
        title: packet.get_string(112u16),
        voip_right: packet.get_string(113u16),
        water_blue: packet.get_string(114u16),
        water_bottom_mask: packet.get_string(115u16),
        water_bottom_texture: packet.get_string(116u16),
        water_enabled: packet.get_string(117u16),
        water_green: packet.get_string(118u16),
        water_level: packet.get_string(119u16),
        water_mask: packet.get_string(120u16),
        water_opacity: packet.get_string(121u16),
        water_red: packet.get_string(122u16),
        water_speed: packet.get_string(123u16),
        water_surface_move: packet.get_string(124u16),
        water_texture: packet.get_string(125u16),
        water_under_terrain: packet.get_string(126u16),
        water_visibility: packet.get_string(127u16),
        water_wave_move: packet.get_string(128u16),
        welcome_message: packet.get_string(129u16),
        disable_multiple_media: packet.get_string(130u16),
        sound_ambient: packet.get_string(131u16),
        botmenu_url: packet.get_string(132u16),
        enable_bump_event: packet.get_string(133u16),
        enable_sync_events: packet.get_string(134u16),
        enable_cav: packet.get_string(135u16),
        enable_pav: packet.get_string(136u16),
        friction: packet.get_string(137u16),
        water_friction: packet.get_string(138u16),
        slopeslide_enabled: packet.get_string(139u16),
        slopeslide_min_angle: packet.get_string(140u16),
        slopeslide_max_angle: packet.get_string(141u16),
        fog_tinted: packet.get_string(142u16),
        light_source_use_color: packet.get_string(143u16),
        light_source_color: packet.get_string(144u16),
        chat_disable_url_clicks: packet.get_string(145u16),
        mover_empty_reset_timeout: packet.get_string(146u16),
        mover_used_reset_timeout: packet.get_string(147u16),
        v4_objects_right: packet.get_string(148u16),
        disable_shadows: packet.get_string(149u16),
        enable_camera_collision: packet.get_string(150u16),
        special_commands: packet.get_string(151u16),
        cav_object_path: packet.get_string(152u16),
        cav_object_password: cav_object_password,
        cav_object_refresh: packet.get_string(154u16),
        terrain_right: packet.get_string(155u16),
        voip_conference_global: packet.get_string(156u16),
        voip_moderate_global: packet.get_string(157u16),
        camera_zoom: packet.get_string(158u16),
        wait_limit: packet.get_string(159u16),
        voipcast_host: packet.get_string(160u16),
        voipcast_port: packet.get_string(161u16),
        enable_wireframe: packet.get_string(162u16),
    };

    if let Some(world) = &mut instance.world {
        world.attributes = Some(attributes);
        println!("World attributes: {:#?}", world.attributes);
    }
}

#[derive(Debug, Clone)]
pub struct WorldAttributes {
    pub allow_3_axis_rotation: Option<String>,
    pub allow_avatar_collision: Option<String>,
    pub allow_citizen_whisper: Option<String>,
    pub allow_flying: Option<String>,
    pub allow_object_select: Option<String>,
    pub allow_passthru: Option<String>,
    pub allow_teleport: Option<String>,
    pub allow_tourist_build: Option<String>,
    pub allow_tourist_whisper: Option<String>,
    pub always_show_names: Option<String>,
    pub ambient_light_blue: Option<String>,
    pub ambient_light_green: Option<String>,
    pub ambient_light_red: Option<String>,
    pub avatar_refresh_rate: Option<String>,
    pub backdrop: Option<String>,
    pub bots_right: Option<String>,
    pub build_number: Option<String>,
    pub build_right: Option<String>,
    pub buoyancy: Option<String>,
    pub cell_limit: Option<String>,
    pub clouds_layer1_mask: Option<String>,
    pub clouds_layer1_opacity: Option<String>,
    pub clouds_layer1_speed_x: Option<String>,
    pub clouds_layer1_speed_z: Option<String>,
    pub clouds_layer1_texture: Option<String>,
    pub clouds_layer1_tile: Option<String>,
    pub clouds_layer2_mask: Option<String>,
    pub clouds_layer2_opacity: Option<String>,
    pub clouds_layer2_speed_x: Option<String>,
    pub clouds_layer2_speed_z: Option<String>,
    pub clouds_layer2_texture: Option<String>,
    pub clouds_layer2_tile: Option<String>,
    pub clouds_layer3_mask: Option<String>,
    pub clouds_layer3_opacity: Option<String>,
    pub clouds_layer3_speed_x: Option<String>,
    pub clouds_layer3_speed_z: Option<String>,
    pub clouds_layer3_texture: Option<String>,
    pub clouds_layer3_tile: Option<String>,
    pub creation_timestamp: Option<String>,
    pub disable_avatar_list: Option<String>,
    pub disable_chat: Option<String>,
    pub disable_create_url: Option<String>,
    pub eject_right: Option<String>,
    pub eminent_domain_right: Option<String>,
    pub enable_referer: Option<String>,
    pub enable_terrain: Option<String>,
    pub enter_right: Option<String>,
    pub entry_point: Option<String>,
    pub expiration: Option<String>,
    pub fog_blue: Option<String>,
    pub fog_enable: Option<String>,
    pub fog_green: Option<String>,
    pub fog_maximum: Option<String>,
    pub fog_minimum: Option<String>,
    pub fog_red: Option<String>,
    pub gravity: Option<String>,
    pub ground: Option<String>,
    pub home_page: Option<String>,
    pub keywords: Option<String>,
    pub light_blue: Option<String>,
    pub light_draw_bright: Option<String>,
    pub light_draw_front: Option<String>,
    pub light_draw_size: Option<String>,
    pub light_green: Option<String>,
    pub light_mask: Option<String>,
    pub light_red: Option<String>,
    pub light_texture: Option<String>,
    pub light_x: Option<String>,
    pub light_y: Option<String>,
    pub light_z: Option<String>,
    pub max_light_radius: Option<String>,
    pub max_users: Option<String>,
    pub minimum_visibility: Option<String>,
    pub object_count: Option<String>,
    pub object_password: Option<String>,
    pub object_path: Option<String>,
    pub object_refresh: Option<String>,
    pub public_speaker_right: Option<String>,
    pub rating: Option<String>,
    pub repeating_ground: Option<String>,
    pub restricted_radius: Option<String>,
    pub size: Option<String>,
    pub skybox: Option<String>,
    pub sky_bottom_blue: Option<String>,
    pub sky_bottom_green: Option<String>,
    pub sky_bottom_red: Option<String>,
    pub sky_east_blue: Option<String>,
    pub sky_east_green: Option<String>,
    pub sky_east_red: Option<String>,
    pub sky_north_blue: Option<String>,
    pub sky_north_green: Option<String>,
    pub sky_north_red: Option<String>,
    pub sky_south_blue: Option<String>,
    pub sky_south_green: Option<String>,
    pub sky_south_red: Option<String>,
    pub sky_top_blue: Option<String>,
    pub sky_top_green: Option<String>,
    pub sky_top_red: Option<String>,
    pub sky_west_blue: Option<String>,
    pub sky_west_green: Option<String>,
    pub sky_west_red: Option<String>,
    pub sound_footstep: Option<String>,
    pub sound_water_enter: Option<String>,
    pub sound_water_exit: Option<String>,
    pub speak_right: Option<String>,
    pub special_commands_right: Option<String>,
    pub special_objects_right: Option<String>,
    pub terrain_ambient: Option<String>,
    pub terrain_diffuse: Option<String>,
    pub terrain_offset: Option<String>,
    pub terrain_timestamp: Option<String>,
    pub title: Option<String>,
    pub voip_right: Option<String>,
    pub water_blue: Option<String>,
    pub water_bottom_mask: Option<String>,
    pub water_bottom_texture: Option<String>,
    pub water_enabled: Option<String>,
    pub water_green: Option<String>,
    pub water_level: Option<String>,
    pub water_mask: Option<String>,
    pub water_opacity: Option<String>,
    pub water_red: Option<String>,
    pub water_speed: Option<String>,
    pub water_surface_move: Option<String>,
    pub water_texture: Option<String>,
    pub water_under_terrain: Option<String>,
    pub water_visibility: Option<String>,
    pub water_wave_move: Option<String>,
    pub welcome_message: Option<String>,
    pub disable_multiple_media: Option<String>,
    pub sound_ambient: Option<String>,
    pub botmenu_url: Option<String>,
    pub enable_bump_event: Option<String>,
    pub enable_sync_events: Option<String>,
    pub enable_cav: Option<String>,
    pub enable_pav: Option<String>,
    pub friction: Option<String>,
    pub water_friction: Option<String>,
    pub slopeslide_enabled: Option<String>,
    pub slopeslide_min_angle: Option<String>,
    pub slopeslide_max_angle: Option<String>,
    pub fog_tinted: Option<String>,
    pub light_source_use_color: Option<String>,
    pub light_source_color: Option<String>,
    pub chat_disable_url_clicks: Option<String>,
    pub mover_empty_reset_timeout: Option<String>,
    pub mover_used_reset_timeout: Option<String>,
    pub v4_objects_right: Option<String>,
    pub disable_shadows: Option<String>,
    pub enable_camera_collision: Option<String>,
    pub special_commands: Option<String>,
    pub cav_object_path: Option<String>,
    pub cav_object_password: Option<String>,
    pub cav_object_refresh: Option<String>,
    pub terrain_right: Option<String>,
    pub voip_conference_global: Option<String>,
    pub voip_moderate_global: Option<String>,
    pub camera_zoom: Option<String>,
    pub wait_limit: Option<String>,
    pub voipcast_host: Option<String>,
    pub voipcast_port: Option<String>,
    pub enable_wireframe: Option<String>,
}
